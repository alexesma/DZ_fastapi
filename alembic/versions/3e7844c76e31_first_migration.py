"""First migration

Revision ID: 3e7844c76e31
Revises:
Create Date: 2024-04-27 14:32:50.491827

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3e7844c76e31'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('brand',
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('country_of_origin', sa.String(length=100), nullable=True),
    sa.Column('website', sa.String(length=1056), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('logo', sa.String(length=1056), nullable=True),
    sa.Column('main_brand', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.CheckConstraint("name ~ '^[a-zA-Z0-9]+$'", name='check_name_brand'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('category',
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['category.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('parent_id', name='unique_parent_id')
    )
    op.create_table('client',
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('type_prices', sa.Enum('WHOLESALE', 'RETAIL', name='type_prices'), nullable=True),
    sa.Column('email_contact', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_client_email_contact'), 'client', ['email_contact'], unique=True)
    op.create_table('engine',
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('fuel_type', sa.Enum('PETROL', 'DIESEL', 'ELECTRIC', name='fueltype'), nullable=False),
    sa.Column('power', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.CheckConstraint("name ~ '^[a-zA-Z0-9/-]+$'", name='name_format'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('standardsize',
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('size_type', sa.String(length=64), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('storagelocation',
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.CheckConstraint("name ~ '^[A-Z0-9]+$'", name='latin_characters_only'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('airfilter',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type_case', sa.Enum('PLASTIC_CASE', 'RUBBER_CASE', 'PAPER_CASE', name='type_air_filter'), nullable=True),
    sa.Column('length', sa.Integer(), nullable=False),
    sa.Column('width', sa.Integer(), nullable=False),
    sa.Column('height', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['standardsize.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('autopart',
    sa.Column('brand_id', sa.Integer(), nullable=False),
    sa.Column('oem_number', sa.String(length=256), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('width', sa.Float(), nullable=True),
    sa.Column('height', sa.Float(), nullable=True),
    sa.Column('length', sa.Float(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('purchase_price', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('retail_price', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('wholesale_price', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('multiplicity', sa.Integer(), nullable=True),
    sa.Column('minimum_balance', sa.Integer(), nullable=True),
    sa.Column('min_balance_auto', sa.Boolean(), nullable=True),
    sa.Column('min_balance_user', sa.Boolean(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['brand_id'], ['brand.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('brand_id', 'oem_number', name='uq_brand_oem_number')
    )
    op.create_index(op.f('ix_autopart_oem_number'), 'autopart', ['oem_number'], unique=False)
    op.create_table('brand_synonyms',
    sa.Column('brand_id', sa.Integer(), nullable=False),
    sa.Column('synonym_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['brand_id'], ['brand.id'], ),
    sa.ForeignKeyConstraint(['synonym_id'], ['brand.id'], ),
    sa.PrimaryKeyConstraint('brand_id', 'synonym_id'),
    sa.UniqueConstraint('brand_id', 'synonym_id', name='unique_brand_synonyms')
    )
    op.create_table('cabinfilter',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('length', sa.Integer(), nullable=False),
    sa.Column('width', sa.Integer(), nullable=False),
    sa.Column('height', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['standardsize.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('carmodel',
    sa.Column('brand_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=56), nullable=False),
    sa.Column('year_start', sa.String(), nullable=True),
    sa.Column('year_end', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('image', sa.String(length=1056), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.CheckConstraint("name ~ '^[a-zA-Z0-9/-]+$'", name='name_format'),
    sa.ForeignKeyConstraint(['brand_id'], ['brand.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('brand_id', 'name', name='unique_brand_name'),
    sa.UniqueConstraint('image'),
    sa.UniqueConstraint('name')
    )
    op.create_table('customer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email_outgoing_price', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['client.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_customer_email_outgoing_price'), 'customer', ['email_outgoing_price'], unique=True)
    op.create_table('provider',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email_incoming_price', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['client.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_provider_email_incoming_price'), 'provider', ['email_incoming_price'], unique=True)
    op.create_table('sealsize',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('inner_diameter', sa.Integer(), nullable=False),
    sa.Column('external_diameter', sa.Integer(), nullable=False),
    sa.Column('width', sa.Integer(), nullable=False),
    sa.Column('width_with_projection', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['standardsize.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('autopart_category_association',
    sa.Column('autopart_id', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['autopart_id'], ['autopart.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.PrimaryKeyConstraint('autopart_id', 'category_id'),
    sa.UniqueConstraint('autopart_id', 'category_id', name='unique_autopart_category')
    )
    op.create_table('autopart_storage_association',
    sa.Column('autopart_id', sa.Integer(), nullable=True),
    sa.Column('storage_location_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['autopart_id'], ['autopart.id'], ),
    sa.ForeignKeyConstraint(['storage_location_id'], ['storagelocation.id'], ),
    sa.UniqueConstraint('autopart_id', 'storage_location_id', name='unique_autopart_storage_location')
    )
    op.create_table('car_model_autopart_association',
    sa.Column('carmodel_id', sa.Integer(), nullable=True),
    sa.Column('autopart_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['autopart_id'], ['autopart.id'], ),
    sa.ForeignKeyConstraint(['carmodel_id'], ['carmodel.id'], ),
    sa.UniqueConstraint('carmodel_id', 'autopart_id', name='unique_carmodel_autopart')
    )
    op.create_table('car_model_engine_association',
    sa.Column('carmodel_id', sa.Integer(), nullable=True),
    sa.Column('engine_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['carmodel_id'], ['carmodel.id'], ),
    sa.ForeignKeyConstraint(['engine_id'], ['engine.id'], ),
    sa.UniqueConstraint('carmodel_id', 'engine_id', name='unique_carmodel_engine')
    )
    op.create_table('customerpricelist',
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['customer.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('photo',
    sa.Column('url', sa.String(length=1056), nullable=False),
    sa.Column('autopart_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['autopart_id'], ['autopart.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('url'),
    sa.UniqueConstraint('url', 'autopart_id', name='unique_photo')
    )
    op.create_table('pricelist',
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('provider_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['provider_id'], ['provider.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('standard_size_autopart_association',
    sa.Column('standard_size_id', sa.Integer(), nullable=True),
    sa.Column('autopart_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['autopart_id'], ['autopart.id'], ),
    sa.ForeignKeyConstraint(['standard_size_id'], ['standardsize.id'], ),
    sa.UniqueConstraint('standard_size_id', 'autopart_id', name='unique_standard_size_autopart')
    )
    op.create_table('customer_price_list_autopart_association',
    sa.Column('customerpricelist_id', sa.Integer(), nullable=True),
    sa.Column('autopart_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('price', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['autopart_id'], ['autopart.id'], ),
    sa.ForeignKeyConstraint(['customerpricelist_id'], ['customerpricelist.id'], )
    )
    op.create_index('ix_customer_price_list_autopart_id', 'customer_price_list_autopart_association', ['autopart_id'], unique=False)
    op.create_index('ix_customer_price_list_customerpricelist_id', 'customer_price_list_autopart_association', ['customerpricelist_id'], unique=False)
    op.create_table('price_list_autopart_association',
    sa.Column('pricelist_id', sa.Integer(), nullable=True),
    sa.Column('autopart_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('price', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['autopart_id'], ['autopart.id'], ),
    sa.ForeignKeyConstraint(['pricelist_id'], ['pricelist.id'], )
    )
    op.create_index('ix_price_list_autopart_id', 'price_list_autopart_association', ['autopart_id'], unique=False)
    op.create_index('ix_price_list_pricelist_id', 'price_list_autopart_association', ['pricelist_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_price_list_pricelist_id', table_name='price_list_autopart_association')
    op.drop_index('ix_price_list_autopart_id', table_name='price_list_autopart_association')
    op.drop_table('price_list_autopart_association')
    op.drop_index('ix_customer_price_list_customerpricelist_id', table_name='customer_price_list_autopart_association')
    op.drop_index('ix_customer_price_list_autopart_id', table_name='customer_price_list_autopart_association')
    op.drop_table('customer_price_list_autopart_association')
    op.drop_table('standard_size_autopart_association')
    op.drop_table('pricelist')
    op.drop_table('photo')
    op.drop_table('customerpricelist')
    op.drop_table('car_model_engine_association')
    op.drop_table('car_model_autopart_association')
    op.drop_table('autopart_storage_association')
    op.drop_table('autopart_category_association')
    op.drop_table('sealsize')
    op.drop_index(op.f('ix_provider_email_incoming_price'), table_name='provider')
    op.drop_table('provider')
    op.drop_index(op.f('ix_customer_email_outgoing_price'), table_name='customer')
    op.drop_table('customer')
    op.drop_table('carmodel')
    op.drop_table('cabinfilter')
    op.drop_table('brand_synonyms')
    op.drop_index(op.f('ix_autopart_oem_number'), table_name='autopart')
    op.drop_table('autopart')
    op.drop_table('airfilter')
    op.drop_table('storagelocation')
    op.drop_table('standardsize')
    op.drop_table('engine')
    op.drop_index(op.f('ix_client_email_contact'), table_name='client')
    op.drop_table('client')
    op.drop_table('category')
    op.drop_table('brand')
    # ### end Alembic commands ###