"""Add Client and Provider

Revision ID: 016d634e658a
Revises: 2f1149ea23e6
Create Date: 2024-11-01 08:54:58.340044

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '016d634e658a'
down_revision: Union[str, None] = '2f1149ea23e6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('client',
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('type_prices', sa.Enum('WHOLESALE', 'RETAIL', name='type_prices'), nullable=True),
    sa.Column('email_contact', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_client_email_contact'), 'client', ['email_contact'], unique=True)
    op.create_table('customer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email_outgoing_price', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['client.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_customer_email_outgoing_price'), 'customer', ['email_outgoing_price'], unique=True)
    op.create_table('provider',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email_incoming_price', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['client.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_provider_email_incoming_price'), 'provider', ['email_incoming_price'], unique=True)
    op.create_table('customerpricelist',
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['customer.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pricelist',
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('provider_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['provider_id'], ['provider.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('customer_price_list_autopart_association',
    sa.Column('customerpricelist_id', sa.Integer(), nullable=False),
    sa.Column('autopart_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('price', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['autopart_id'], ['autopart.id'], ),
    sa.ForeignKeyConstraint(['customerpricelist_id'], ['customerpricelist.id'], ),
    sa.PrimaryKeyConstraint('customerpricelist_id', 'autopart_id')
    )
    op.create_index('ix_customer_price_list_autopart_id', 'customer_price_list_autopart_association', ['autopart_id'], unique=False)
    op.create_index('ix_customer_price_list_customerpricelist_id', 'customer_price_list_autopart_association', ['customerpricelist_id'], unique=False)
    op.create_table('price_list_autopart_association',
    sa.Column('pricelist_id', sa.Integer(), nullable=False),
    sa.Column('autopart_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('price', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['autopart_id'], ['autopart.id'], ),
    sa.ForeignKeyConstraint(['pricelist_id'], ['pricelist.id'], ),
    sa.PrimaryKeyConstraint('pricelist_id', 'autopart_id')
    )
    op.create_index('ix_price_list_autopart_id', 'price_list_autopart_association', ['autopart_id'], unique=False)
    op.create_index('ix_price_list_pricelist_id', 'price_list_autopart_association', ['pricelist_id'], unique=False)
    # op.create_unique_constraint('unique_autopart_category', 'autopart_category_association', ['autopart_id', 'category_id'])
    # op.create_unique_constraint('unique_brand_synonyms', 'brand_synonyms', ['brand_id', 'synonym_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_constraint('unique_brand_synonyms', 'brand_synonyms', type_='unique')
    # op.drop_constraint('unique_autopart_category', 'autopart_category_association', type_='unique')
    op.drop_index('ix_price_list_pricelist_id', table_name='price_list_autopart_association')
    op.drop_index('ix_price_list_autopart_id', table_name='price_list_autopart_association')
    op.drop_table('price_list_autopart_association')
    op.drop_index('ix_customer_price_list_customerpricelist_id', table_name='customer_price_list_autopart_association')
    op.drop_index('ix_customer_price_list_autopart_id', table_name='customer_price_list_autopart_association')
    op.drop_table('customer_price_list_autopart_association')
    op.drop_table('pricelist')
    op.drop_table('customerpricelist')
    op.drop_index(op.f('ix_provider_email_incoming_price'), table_name='provider')
    op.drop_table('provider')
    op.drop_index(op.f('ix_customer_email_outgoing_price'), table_name='customer')
    op.drop_table('customer')
    op.drop_index(op.f('ix_client_email_contact'), table_name='client')
    op.drop_table('client')
    # ### end Alembic commands ###
