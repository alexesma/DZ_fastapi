"""Add customer for Order

Revision ID: 9c66dc053cff
Revises: 14e6942a049a
Create Date: 2025-07-24 12:09:40.236711

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9c66dc053cff'
down_revision: Union[str, None] = '14e6942a049a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('order',
    sa.Column('provider_id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.Enum('NEW_OREDER', 'ORDERED', 'CONFIRMED', 'ARRIVED', 'SHIPPED', 'REFUSAL', 'ERROR', 'REMOVED', 'PROCESSING', 'TRANSIT', 'ACCEPTED', 'RETURNED', name='type_status_order'), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['customer.id'], ),
    sa.ForeignKeyConstraint(['provider_id'], ['provider.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orderitem',
    sa.Column('order_id', sa.Integer(), nullable=True),
    sa.Column('autopart_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('price', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['autopart_id'], ['autopart.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['order.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('autopartrestockdecisionsupplier')
    op.drop_index('ix_autopartrestockdecision_autopart_id', table_name='autopartrestockdecision')
    op.drop_table('autopartrestockdecision')
    op.create_unique_constraint('unique_autopart_category', 'autopart_category_association', ['autopart_id', 'category_id'])
    op.create_unique_constraint('unique_brand_synonyms', 'brand_synonyms', ['brand_id', 'synonym_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('unique_brand_synonyms', 'brand_synonyms', type_='unique')
    op.drop_constraint('unique_autopart_category', 'autopart_category_association', type_='unique')
    op.create_table('autopartrestockdecision',
    sa.Column('autopart_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('required_quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('decision_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('autopartrestockdecision_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['autopart_id'], ['autopart.id'], name='autopartrestockdecision_autopart_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='autopartrestockdecision_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_autopartrestockdecision_autopart_id', 'autopartrestockdecision', ['autopart_id'], unique=False)
    op.create_table('autopartrestockdecisionsupplier',
    sa.Column('restock_decision_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('supplier_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('price', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['restock_decision_id'], ['autopartrestockdecision.id'], name='autopartrestockdecisionsupplier_restock_decision_id_fkey'),
    sa.ForeignKeyConstraint(['supplier_id'], ['provider.id'], name='autopartrestockdecisionsupplier_supplier_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='autopartrestockdecisionsupplier_pkey')
    )
    op.drop_table('orderitem')
    op.drop_table('order')
    # ### end Alembic commands ###
